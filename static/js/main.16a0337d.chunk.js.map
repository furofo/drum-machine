{"version":3,"sources":["index.js"],"names":["rootReducer","combineReducers","power","state","action","type","volume","currentVolume","kit","displayText","heaterKit","Q","name","url","W","E","A","S","D","Z","X","C","pianoKit","isBankChecked","checked","isPowerChecked","store","createStore","playAudio","id","audio","document","getElementById","paused","play","currentTime","DrumContainer","props","handleChange","bind","handleClick","bankButtonClick","powerButtonClick","event","this","currentVolumeDispatch","target","value","setTimeout","$","fadeIn","html","fadeOut","childNodes","attr","button","css","console","log","actionDispatch","kitDispatch","bankCheckDispatch","keydown","e","which","click","className","onClick","src","defaultChecked","min","max","onChange","classNameName","React","Component","Container","connect","dispatch","kitType","volumeDispatch","addOrSubtract","addValue","subtractValue","displayDispatch","text","powerCheckDispatch","DrumContent","ReactDom","render"],"mappings":"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","file":"static/js/main.16a0337d.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport { render } from 'react-dom'\r\nimport './style.css';\r\nimport $ from \"jquery\";\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Provider } from 'react-redux'\r\nimport { createStore } from 'redux';\r\nimport { combineReducers } from 'redux'\r\n\r\n// const declarations  used to make typo mistakes harder to make\r\nconst ACTION = 'ACTION';\r\nconst ADDVOLUME = 'ADDVOLUME';\r\nconst SUBTRACTVOLUME = 'SUBTRACTVOLUME';\r\nconst CURRENTVOLUME = 'CURRENTVOLUME';\r\nconst DISPLAY = \"DISPLAY\";\r\nconst CHECKED = \"CHECKED\";\r\n// redux logic\r\n//reducers to be combined in one reducer\r\nconst powerReducer = (state = true, action) => { //true means power on false means power off\r\n    switch(action.type) {\r\n        case ACTION:\r\n            return !state;\r\n        default: \r\n            return state;\r\n}\r\n}\r\nconst volumeReducer = (state = 100, action) => { \r\n    switch(action.type) {\r\n        case CURRENTVOLUME:\r\n            return action.currentVolume; \r\n        default:\r\n            return state;\r\n        \r\n    }\r\n}\r\nconst kitReducer = (state = 'heaterKit', action) => { // used to switch between sound tracks or kits\r\n    switch(action.type) {\r\n        case 'pianoKit':\r\n            return 'heaterKit';\r\n        case 'heaterKit':\r\n            return 'pianoKit';\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nconst displayReducer = (state = '', action) => { // this is text that goes into display block beneath power button\r\n   switch(action.type)  {\r\n       case DISPLAY:\r\n           return action.displayText;\r\n        default:\r\n            return state;\r\n   }\r\n}\r\nconst heaterKitReducer = (state = { //object with all sounds and names for heater kit\r\n    Q: {\r\n        name: 'Heater-1', \r\n        url:'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3',\r\n    },\r\n    W: {\r\n        name: 'Heater-2',\r\n        url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3'\r\n    },\r\n    E: {\r\n        name: 'Heater-3',\r\n        url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3',\r\n    },\r\n    A: {\r\n        name: 'Heater-4',\r\n        url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3',\r\n    },\r\n    S: {\r\n        name: 'Heater-6',\r\n        url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3'\r\n    },\r\n    D: {\r\n        name: 'Drums Oh',\r\n        url: 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3',\r\n    },\r\n    Z: {\r\n        name: 'Kick and Hat',\r\n        url: 'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3',\r\n    },\r\n    X: {\r\n        name: 'Kick 1',\r\n        url: 'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3',\r\n    },\r\n    C: {\r\n        name: 'Cev H2',\r\n        url: 'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3',\r\n    }\r\n                                    }) => {\r\n    return state;\r\n};\r\nconst pianoKitReducer = ( // object for all pianoKit names and sounds\r\n    state = {\r\n        Q: {\r\n            name: 'Chord 1',\r\n            url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3',\r\n        },\r\n\r\n        W: {\r\n            name: 'Chord 2',\r\n            url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3',\r\n        },\r\n\r\n        E: {\r\n            name: 'Chord 3',\r\n            url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3',\r\n        },\r\n\r\n        A: {\r\n            name: 'Light',\r\n            url: 'https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3',\r\n        },\r\n        S: {\r\n            name: 'Ohh',\r\n            url: 'https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3',\r\n        },\r\n        D: {\r\n            name: 'BLD H1',\r\n            url: 'https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3',\r\n        },\r\n        Z: {\r\n            name: 'Kick 1',\r\n            url: 'https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3',\r\n        },\r\n        X: {\r\n            name: 'Stick 1',\r\n            url: 'https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3',\r\n        },\r\n        C: {\r\n            name: 'Brk',\r\n            url: 'https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3',\r\n        }\r\n\r\n\r\n    }\r\n) => {\r\n    return state;\r\n}\r\nconst bankCheckedReducer = (state = false, action) => { //used for bank toggle button had to move logic for checked into react\r\n    switch (action.type) {\r\n        case CHECKED:\r\n            return action.checked;\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst powerCheckedReducer = (state = true, action) => { //used for power toggle button had to move logic for checked into react\r\n    switch (action.type) {\r\n        case CHECKED:\r\n            return action.checked;\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n// this is reducer that will combine all reducers\r\nconst rootReducer = combineReducers({\r\n    power: powerReducer,\r\n    volume: volumeReducer,\r\n    kit: kitReducer,\r\n    displayText: displayReducer,\r\n    heaterKit: heaterKitReducer,\r\n    pianoKit: pianoKitReducer,\r\n    isBankChecked: bankCheckedReducer,\r\n    isPowerChecked: powerCheckedReducer,\r\n});\r\n//this is store tat will get all the state asign to it\r\nlet store = createStore(rootReducer);\r\n//react Logic\r\nfunction playAudio(id) {  //logic to play audio on click restarts audio if already playing so you click buttons fast tor restart sound\r\n    var audio = document.getElementById(id);\r\n    if (audio.paused) {\r\n        audio.play();\r\n    }else{\r\n        audio.currentTime = 0\r\n    }\r\n}\r\nclass DrumContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.bankButtonClick = this.bankButtonClick.bind(this);\r\n        this.powerButtonClick = this.powerButtonClick.bind(this);\r\n    }\r\n    handleChange(event) {\r\n        this.props.currentVolumeDispatch(event.target.value);\r\n        setTimeout(function(){$('#display-text').fadeIn()}, 10);\r\n        $('#display-text').html('Volume: ' + event.target.value);\r\n        setTimeout(function(){$('#display-text').fadeOut()}, 2000);\r\n    }\r\n    handleClick(event) { //click logic for sound buttons\r\n        if(this.props.power){ // if has power basically\r\n            if(this.props.kit == 'heaterKit'){ // which heater kit is it heater or piano? If heater this\r\n            let id = $(event.target.childNodes[1]).attr('id'); // this gets id of audio element spefically\r\n            document.getElementById(id).volume = (this.props.volume / 100);  // the onlyi way to manually set volume tha ti found\r\n            $('#display-text').html(this.props.heaterKit[id].name);\r\n            let button = event.target;\r\n            $('#' +id).attr('src', this.props.heaterKit[id].url);\r\n            playAudio(id);\r\n            $(button).css('background-color', '#FFA500');     \r\n            setTimeout(function(){$(button).css('background-color', '#808080'); }, 50);\r\n                }\r\n            else {\r\n            let id = $(event.target.childNodes[1]).attr('id');\r\n            document.getElementById(id).volume = (this.props.volume / 100); \r\n            let button = event.target;\r\n            $('#' +id).attr('src', this.props.pianoKit[id].url);\r\n            playAudio(id);\r\n            $(button).css('background-color', '#FFA500');    \r\n            setTimeout(function(){$(button).css('background-color', '#808080'); }, 50);\r\n            $('#display-text').html(this.props.pianoKit[id].name);\r\n        }\r\n            }\r\n        else {\r\n            console.log('make sure power is turned on!'); // here if people inspect lol\r\n        }\r\n    }\r\n\r\n    powerButtonClick() {\r\n        this.props.actionDispatch(); // switches state of power \r\n    }\r\n\r\n    bankButtonClick() {\r\n       this.props.kitDispatch(this.props.kit); //swaps kit between pianoKit and Heater Kit\r\n       setTimeout(() => {\r\n        if(this.props.kit == 'pianoKit') {\r\n            $('#display-text').html('Piano Kit');\r\n           }\r\n    \r\n           else {\r\n            $('#display-text').html('Heater Kit');\r\n           }\r\n       }, 50); // put on timeout since it takes a second to update\r\n       this.props.bankCheckDispatch(this.props.isBankChecked); //switches boolean state of isBankChecked prop\r\n    }\r\n\r\n    componentDidMount() {\r\n        $(function() { // waits until component mounts and everything loads gravily\r\n            $(document).keydown(function(e) {\r\n             switch(e.which) { \r\n                case 81:\r\n                    $(\"#q-button\").click();\r\n                    break;\r\n\r\n                case 87:\r\n                    $(\"#w-button\").click();\r\n                    break;\r\n\r\n                case 69:\r\n                    $(\"#e-button\").click();\r\n                    break;\r\n                \r\n                case 65:\r\n                    $(\"#a-button\").click();\r\n                    break;\r\n\r\n                case 83:\r\n                    $(\"#s-button\").click();\r\n                    break;\r\n                \r\n                case 68:\r\n                    $(\"#d-button\").click();\r\n                    break;\r\n                case 90:\r\n                    $(\"#z-button\").click();\r\n                    break;\r\n                case 88:\r\n                    $(\"#x-button\").click();\r\n                    break;\r\n                case 67:\r\n                    $(\"#c-button\").click();\r\n                    break;\r\n             } \r\n         });\r\n         });\r\n    }\r\n    render(){\r\n        return(\r\n            <div id = \"drum-machine\">\r\n            <div className = \"absolute-center\">\r\n            <div id = \"drum-machine-content\">\r\n            <div className =\"numpad\">\r\n                <div className = \"drum-machine-row\">\r\n                    <button className = \"drum-pad drum-machine-button\" onClick = {this.handleClick} value = 'yes' id = 'q-button'> <audio className = \"clip\"  id = 'Q' src = \"\"  ></audio>Q </button>\r\n                    <button className = \"drum-pad drum-machine-button\" onClick = {this.handleClick} id = 'w-button' >  <audio className = \"clip\"  id = 'W' src = \"\"></audio>W </button>\r\n                    <button className = \"drum-pad drum-machine-button\" onClick = {this.handleClick} id = 'e-button'> <audio className = \"clip\"  id = 'E' src = \"\"></audio> E </button>\r\n                </div>\r\n\r\n                <div className = \"drum-machine-row\">\r\n                    <button className = \"drum-pad drum-machine-button\" onClick = {this.handleClick} id = 'a-button'> <audio className = \"clip\"  id = 'A' src = \"\"></audio>A </button>\r\n                    <button className = \"drum-pad drum-machine-button\" onClick = {this.handleClick} id = 's-button'> <audio className = \"clip\"  id = 'S' src = \"\"></audio>S </button>\r\n                    <button className = \"drum-pad drum-machine-button\" onClick = {this.handleClick} id = 'd-button'> <audio className = \"clip\"  id = 'D' src = \"\"></audio>D </button>\r\n                </div>\r\n\r\n                <div className = \"drum-machine-row\">\r\n                    <button className = \"drum-pad drum-machine-button\" onClick = {this.handleClick} id = 'z-button'> <audio className = \"clip\"  id = 'Z' src = \"\"></audio>Z </button>\r\n                    <button className = \"drum-pad drum-machine-button\" onClick = {this.handleClick} id = 'x-button'> <audio className = \"clip\"  id = 'X' src = \"\"></audio>X </button>\r\n                    <button className = \"drum-pad drum-machine-button\" onClick = {this.handleClick} id = 'c-button'> <audio className = \"clip\"  id = 'C' src = \"\"></audio>C </button>\r\n                </div>\r\n                </div>\r\n                <div className =\"buttons\">\r\n                <div className = \"center\" id=\"power-text\">\r\n                         <h3>Power</h3>\r\n                </div>\r\n                <div className = \"center powerbutton\">\r\n                <label className = \"switch\">\r\n                    <input type = \"checkbox\" defaultChecked = {this.props.isPowerChecked}/>\r\n                     <span className = \"slider\" id = \"power-button\" onClick = {this.powerButtonClick}></span>  \r\n                </label>\r\n                </div>\r\n                <div className ='display-container'>\r\n                <div id = \"display\">\r\n                    <p id = \"display-text\">{this.props.displayText}</p>\r\n                </div>\r\n                </div>\r\n                <div className = \"slidecontainer\">\r\n                <input type=\"range\" min=\"0\" max = \"100\"  value = {this.props.volume} onChange = {this.handleChange} classNameName=\"slider2\" id = \"myRange\"/>\r\n                </div>\r\n\r\n                <div className = \"center\" id=\"bank-text\">\r\n                         <h3>Bank</h3>\r\n                </div>\r\n                <div className = \"center powerbutton\">\r\n                <label className = \"switch\">\r\n                    <input type = \"checkbox\" defaultChecked = {this.props.isBankChecked}/>\r\n                     <span className = \"slider\" id = \"bank-button\" onClick = {this.bankButtonClick}></span>  \r\n                </label>\r\n                </div>\r\n                </div> \r\n            </div>\r\n            \r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n//react-reduxLogic\r\nconst mapStateToProps = (state) => { // this maps redux state to properties react can use the only thing that can change these states are dispatch\r\n    return {\r\n        power: state.power,\r\n        volume: state.volume,\r\n        kit: state.kit,\r\n        displayText: state.displayText,\r\n        heaterKit: state.heaterKit,\r\n        pianoKit: state.pianoKit,\r\n        isBankChecked: state.isBankChecked,\r\n        isPowerChecked: state.isPowerChecked,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => { //this maps dispatch methods to properties react can use like normal. Dispatch is the only thing that can change redux state. \r\n    return {\r\n        actionDispatch: () => {\r\n            dispatch({type: ACTION})\r\n        },\r\n        kitDispatch: (kitType) => {\r\n            dispatch({type: kitType})\r\n        },\r\n        volumeDispatch: (volume, addOrSubtract) => {\r\n            if(addOrSubtract == 'ADD'){\r\n                dispatch({type: ADDVOLUME, addValue: volume})\r\n            }\r\n            else {\r\n                dispatch({type: SUBTRACTVOLUME, subtractValue: volume});\r\n            }  \r\n        },\r\n        currentVolumeDispatch: (volume) => {\r\n            dispatch({type: CURRENTVOLUME, currentVolume: volume});\r\n        },\r\n        displayDispatch: (text) => {\r\n            dispatch({type: DISPLAY, displayText: text});\r\n        },\r\n        bankCheckDispatch: (state) => {\r\n           dispatch({type: CHECKED, checked: !state});\r\n        },\r\n        powerCheckDispatch: (state) => {\r\n            dispatch({type: CHECKED, checked: !state});\r\n        }\r\n    }\r\n}\r\n\r\nconst Container = connect(mapStateToProps, mapDispatchToProps)(DrumContainer); // this acutally connects redux state and react state together in a const Contaier\r\nclass DrumContent extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    render() { // here is logic to finalize connecting redux and react state together\r\n        return(\r\n            <Provider store = {store}> \r\n                <Container />\r\n            </Provider> \r\n        );\r\n    }\r\n}\r\nReactDom.render(<DrumContent />, document.getElementById('root'));"],"sourceRoot":""}